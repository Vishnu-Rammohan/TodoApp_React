{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","console","log","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","filterHandler","saveLocalTodos","getLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAqCeA,EAnCF,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,aAAcC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UAkBtD,OACI,iCACI,uBAAOC,MAAOF,EAAWG,SAnBR,SAACC,GACtBP,EAAaO,EAAEC,OAAOH,OACnBE,EAAEC,OAAOH,OAiB6CI,KAAK,OAAOC,UAAU,eAC3E,wBAAQC,QAdU,SAACJ,GACvBA,EAAEK,iBACFV,EAAS,GAAD,mBACDD,GADC,CAEJ,CAAEY,KAAMV,EAAWW,WAAW,EAAOC,GAAoB,IAAhBC,KAAKC,aAElDjB,EAAa,KAQ2BU,UAAU,cAAcD,KAAK,SAAjE,SACI,mBAAGC,UAAU,yBAEjB,qBAAKA,UAAU,SAAf,SACI,yBAAQJ,SAVE,SAACC,GACnBH,EAAUG,EAAEC,OAAOH,QASsBa,KAAK,QAAQR,UAAU,cAAxD,UACI,wBAAQL,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,kC,OCCLc,EA7BF,SAAC,GAAqC,IAAnCN,EAAkC,EAAlCA,KAAMO,EAA4B,EAA5BA,KAAMnB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAkB/B,OACI,sBAAKQ,UAAU,OAAf,UACI,oBAAIA,UAAS,oBAAeU,EAAKN,UAAY,YAAc,IAA3D,SAAkED,IAClE,wBAAQF,QAfQ,WACpBT,EACID,EAAMoB,KAAI,SAACC,GACP,OAAIA,EAAKP,KAAOK,EAAKL,GACV,2BACAO,GADP,IACaR,WAAYQ,EAAKR,YAG3BQ,OAOuBZ,UAAU,eAA5C,SAA2D,mBAAGA,UAAU,mBAExE,wBAAQC,QArBM,WAClBT,EAASD,EAAMsB,QAAO,SAACC,GAAD,OAAQA,EAAGT,KAAOK,EAAKL,OAC7CU,QAAQC,IAAIN,IAmBwBV,UAAU,YAA1C,SAAsD,mBAAGA,UAAU,uBCJhEiB,EAlBE,SAAC,GAAyC,IAAvC1B,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,SAAW0B,EAAoB,EAApBA,cAClC,OACI,qBAAKlB,UAAU,iBAAf,SACI,oBAAIA,UAAU,YAAd,SACKkB,EAAcP,KAAI,SAAAD,GAAI,OACnB,cAAC,EAAD,CACIlB,SAAUA,EACVD,MAAOA,EAEPmB,KAAMA,EACNP,KAAMO,EAAKP,MAFNO,EAAKL,YC+DnBc,MAnEf,WAAe,MAGqBC,mBAAS,IAH9B,mBAGN3B,EAHM,KAGKH,EAHL,OAIa8B,mBAAS,IAJtB,mBAIN7B,EAJM,KAICC,EAJD,OAKe4B,mBAAS,OALxB,mBAKNC,EALM,KAKE3B,EALF,OAM6B0B,mBAAS,IANtC,mBAMNF,EANM,KAMSI,EANT,KASbC,qBAAU,WACRC,IACAC,MACC,CAAClC,EAAO8B,IAEXE,qBAAU,WACRG,MAEC,IAEH,IAAMF,EAAgB,WACpB,OAAQH,GACN,IAAK,YACHC,EAAiB/B,EAAMsB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKN,cAC3C,MACF,IAAK,cACHkB,EAAiB/B,EAAMsB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKN,cAC3C,MACF,QACEkB,EAAiB/B,KAKjBkC,EAAiB,WACnBE,aAAaC,QAAQ,QAASC,KAAKC,UAAUvC,KAE3CmC,EAAgB,WACpB,GAAqC,OAAlCC,aAAaI,QAAQ,SACtBJ,aAAaC,QAAQ,QAASC,KAAKC,UAAU,SACxC,CACL,IAAIE,EAAYH,KAAKI,MAAMN,aAAaI,QAAQ,UAChDvC,EAASwC,KAIb,OACE,sBAAKhC,UAAU,MAAf,UACE,iCACE,sDAEF,cAAC,EAAD,CACEP,UAAWA,EACXF,MAAOA,EACPC,SAAUA,EACVF,aAAcA,EACdI,UAAWA,IAGb,cAAC,EAAD,CACEwB,cAAeA,EACf1B,SAAUA,EACVD,MAAOA,QCxDA2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9a464447.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = ({ setInputText, todos, setTodos, inputText, setStatus }) => {\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value);\r\n        if(e.target.value > 2){\r\n            \r\n        }\r\n    };\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos,\r\n            { text: inputText, completed: false, id: Math.random() * 1000 }\r\n        ]);\r\n        setInputText(\"\");\r\n    };\r\n    const statusHandler = (e) =>{\r\n        setStatus(e.target.value);\r\n    };\r\n    return (\r\n        <form>\r\n            <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n            <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\" >\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n    // Events\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id))\r\n        console.log(todo)\r\n    };\r\n    const completeHandler = () => {\r\n        setTodos(\r\n            todos.map((item) => {\r\n                if (item.id === todo.id) {\r\n                    return {\r\n                        ...item, completed: !item.completed,\r\n                    };\r\n                }\r\n                return item;\r\n            })\r\n        );\r\n    };\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\"><i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\n// Components\r\nimport Todo from \"./Todo\";\r\nconst TodoList = ({ todos, setTodos , filteredTodos }) => {\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filteredTodos.map(todo => (\r\n                    <Todo\r\n                        setTodos={setTodos}\r\n                        todos={todos}\r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        text={todo.text}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, { useState, useEffect } from \"react\";\nimport './App.css';\n// Components\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\nimport Todo from \"./components/Todo\";\n\nfunction App() {\n\n  // state\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  // use effect\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n// Run once when app starts\n  useEffect(() => {\n    getLocalTodos();\n\n  }, []);\n  // functions\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n  // save to local\n  const saveLocalTodos = () => {\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n  const getLocalTodos = () => {\n    if(localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\n      setTodos(todoLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Vishnu's Todo List</h1>\n      </header>\n      <Form\n        inputText={inputText}\n        todos={todos}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        setStatus={setStatus}\n        \n      />\n      <TodoList\n        filteredTodos={filteredTodos}\n        setTodos={setTodos}\n        todos={todos}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}